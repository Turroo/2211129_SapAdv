services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: sapienza_advisor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app_network
    volumes:
      - mongo_data:/data/db

  auth:
    build: ./backend/Authentication  # Percorso corretto per il Dockerfile dell'Auth Service
    container_name: auth_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:admin@db/sapienza_advisor
    ports:
      - "8000:8000"
    networks:
      - app_network

  user:
    build: ./backend/UserManagement  # Percorso corretto per il Dockerfile del User Management Service
    container_name: user_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:admin@db/sapienza_advisor
    ports:
      - "8001:8001"
    networks:
      - app_network

  faculty:
    build: ./backend/FacultyManagement  # Percorso corretto per il Dockerfile del Faculty Service
    container_name: faculty_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:admin@db/sapienza_advisor
    ports:
      - "8002:8002"
    networks:
      - app_network
  
  course:
    build: ./backend/CourseManagement  # Percorso corretto per il Dockerfile del Course Service
    container_name: course_service
    restart: always
    depends_on:
      - db
      - faculty
    environment:
      DATABASE_URL: postgresql://postgres:admin@db/sapienza_advisor
    ports:
      - "8003:8003"
    networks:
      - app_network

  notes:
    build: ./backend/NotesManagement  # Percorso corretto per il Dockerfile del Notes Service
    container_name: notes_service
    restart: always
    depends_on:
      - db
      - mongodb
    environment:
      DATABASE_URL: postgresql://postgres:admin@db/sapienza_advisor
    ports:
      - "8004:8004"
    networks:
      - app_network
  
  admin:
    build: ./backend/AdminManagement  # Percorso corretto per il Dockerfile del Admin Service
    container_name: admin_service
    restart: always
    depends_on:
      - db
      - mongodb
    environment:
      DATABASE_URL: postgresql://postgres:admin@db/sapienza_advisor
    ports:
      - "8005:8005"
    networks:
      - app_network
  
  frontend:
    build: ./frontend
    container_name: frontend_service
    restart: always
    depends_on:
      - auth
      - user
      - faculty
      - course
      - notes
      - admin
    environment:
      - REACT_APP_AUTH_API_URL=http://auth_service:8000
      - REACT_APP_USER_API_URL=http://user_service:8001
      - REACT_APP_FACULTY_API_URL=http://faculty_service:8002
      - REACT_APP_COURSE_API_URL=http://course_service:8003
      - REACT_APP_NOTES_API_URL=http://notes_service:8004
      - REACT_APP_ADMIN_API_URL=http://admin_service:8005
    ports:
      - "3000:80"
    networks:
      - app_network


volumes:
  postgres_data:
  mongo_data:

networks:
  app_network:
    driver: bridge
